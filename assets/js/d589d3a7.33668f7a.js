"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7162],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=d(n),f=i,m=u["".concat(s,".").concat(f)]||u[f]||p[f]||a;return n?r.createElement(m,l(l({ref:t},c),{},{components:n})):r.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var d=2;d<a;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9390:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_label:"Getting started"},l="Getting started",o={unversionedId:"getting-started",id:"getting-started",title:"Getting started",description:"Installation",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/ui/docs/getting-started",draft:!1,editUrl:"https://github.com/ioncakephper/ui/tree/main/website/docs/getting-started.md",tags:[],version:"current",frontMatter:{sidebar_label:"Getting started"},sidebar:"docsSidebar",next:{title:"Basic functions",permalink:"/ui/docs/basic-functions"}},s={},d=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}],c={toc:d},u="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting started"),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm i uijs-kit\n")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Create and render a single field"',title:'"Create',and:!0,render:!0,a:!0,single:!0,'field"':!0},"const ui = require('uijs-kit');\n\n// create textField\nlet tf = ui.textField('First name', {\n  description: 'An optional field. To make it required, append an asterisk in textField first argument or add the required: true in the second argument'\n})\n\nlet h = tf.render();\nconsole.log(h)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Create and render a list of fields"',title:'"Create',and:!0,render:!0,a:!0,list:!0,of:!0,'fields"':!0},"const ui = require('uijs-kit');\n\nlet formFields = [\n    ui.textField('First name'),\n    ui.textField('Last name*'), // use trailing * to create a required field\n    ui.dateField('Date of birth', {name: 'dob'})\n]\n\n// render all fields in formFields\nlet h = formFields.map(field => field.render()).join('')\nconsole.log(h)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Create a formField and render it"',title:'"Create',a:!0,formField:!0,and:!0,render:!0,'it"':!0},"const ui = require('uijs-kit');\n\nlet formFields = [\n    ui.textField('First name'),\n    ui.textField('Last name*'), // use trailing * to create a required field\n    ui.dateField('Date of birth', {name: 'dob'}),\n    ui.booleanField('In charge', {description: 'Whether the person is in charge'})\n]\n\nlet form = ui.formField('Sample form', formFields);\nlet h = form.render()\nconsole.log(h)\n")))}p.isMDXComponent=!0}}]);